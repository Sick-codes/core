{
	"info": {
		"_postman_id": "cd598af5-b017-4e21-924d-9cf243450f35",
		"name": "_photos.network",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization Flow",
			"item": [
				{
					"name": "Authorize Request",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/oauth/authorize?client_id={{client_id}}&response_type=code&redirect_uri={{redirect_uri}}&response_mode=query&scope=openid profile email phone library:read library:write&state=12345",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"oauth",
								"authorize"
							],
							"query": [
								{
									"key": "client_id",
									"value": "{{client_id}}"
								},
								{
									"key": "response_type",
									"value": "code"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}"
								},
								{
									"key": "response_mode",
									"value": "query"
								},
								{
									"key": "scope",
									"value": "openid profile email phone library:read library:write"
								},
								{
									"key": "state",
									"value": "12345"
								}
							]
						},
						"description": "A sign in request to begin the OAuth 2.0 code flow.  Be sure to copy & paste into a browser! Running this request in Postman will just return you the HTML of our login pages."
					},
					"response": []
				},
				{
					"name": "Access Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d63ff964-8c5b-4bfe-b5c4-7ac85220f06d",
								"exec": [
									"pm.test(\"Read access token and refresh token from the response and save as environment vars.\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.json;",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-url-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{auth_code}}",
									"description": "replace from the redirect uri in your browser!",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirect_uri}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/oauth/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "The POST request to exchange an auth code for an access token.  Be sure to replace the code with your own, that you recieved after signing in!"
					},
					"response": []
				},
				{
					"name": "Refresh Token Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a724d33d-eba9-4f7e-8795-0f3adc28fb91",
								"exec": [
									"pm.test(\"Read access token and refresh token from the response and save as environment vars.\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.response.to.be.ok;",
									"    pm.response.to.be.json;",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "refresh_token",
									"type": "text"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{client_secret}}",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "openid profile email phone library:read library:write admin.users:write",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/oauth/token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"oauth",
								"token"
							]
						},
						"description": "The POST request to exchange a refresh token for an access token.  Be sure to replace the refresh_token with your own, that you recieved along with your access_token."
					},
					"response": []
				},
				{
					"name": "Protected",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/protected",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"protected"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "token",
									"value": "{{refresh_token}}",
									"type": "text"
								},
								{
									"key": "token_type_hint",
									"value": "refresh_token",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/revoke",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"revoke"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User management",
			"item": [
				{
					"name": "get users",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "get user",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties.email\": \"max.mustermann@photos.network\",\n  \"properties.firstName\": \"Max\",\n  \"properties.lastName\": \"Mustermann\",\n  \"properties.password\": \"myS3curePa$$wor!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "update user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"properties.email\": \"max.mustermann@photos.network\",\n  \"properties.firstName\": \"Max\",\n  \"properties.lastName\": \"Mustermann\",\n  \"properties.password\": \"myS3curePa$$wor!\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "create user Copy",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}/users/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Photos",
			"item": [
				{
					"name": "list photos",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/v1/photos",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "get photo",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{base_url}}/v1/photo/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"photo",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}